{"version":3,"sources":["polyfill.js","App.js","serviceWorker.js","reducers/UserReducer.js","index.js","store/index.js"],"names":["window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","prototype","Event","loading","react_default","a","createElement","className","DefaultLayout","Loadable","loader","Promise","all","__webpack_require__","e","then","bind","Login","Register","Page404","Page500","AjaxLoader","id","App","App_AjaxLoader","BrowserRouter","Switch","Route","exact","path","name","component","Component","Boolean","location","hostname","match","UserReducer","state","arguments","length","action","type","payload","_callee","_ref","store","persistor","regenerator_default","wrap","_context","prev","next","resolve","reject","rootReducer","combineReducers","user","compose","applyMiddleware","thunk","persistConfig","key","storage","persistedReducer","persistReducer","createStore","persistStore","sent","ReactDOM","render","es","react","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister","stop","this","init"],"mappings":"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","file":"static/js/main.d09e456f.chunk.js","sourcesContent":["/*\r\n* required polyfills\r\n*/\r\n\r\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\r\n// import 'core-js/es6/symbol'\r\n// import 'core-js/es6/object'\r\n// import 'core-js/es6/function'\r\n// import 'core-js/es6/parse-int'\r\n// import 'core-js/es6/parse-float'\r\n// import 'core-js/es6/number'\r\n// import 'core-js/es6/math'\r\n// import 'core-js/es6/string'\r\n// import 'core-js/es6/date'\r\nimport 'core-js/es6/array'\r\n// import 'core-js/es6/regexp'\r\nimport 'core-js/es6/map'\r\n// import 'core-js/es6/weak-map'\r\nimport 'core-js/es6/set'\r\nimport 'core-js/es7/object'\r\n\r\n/** IE10 and IE11 requires the following for the Reflect API. */\r\n// import 'core-js/es6/reflect'\r\n\r\n/** Evergreen browsers require these. **/\r\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\r\n// import 'core-js/es7/reflect'\r\n\r\n// CustomEvent() constructor functionality in IE9, IE10, IE11\r\n(function () {\r\n\r\n  if ( typeof window.CustomEvent === \"function\" ) return false\r\n\r\n  function CustomEvent ( event, params ) {\r\n    params = params || { bubbles: false, cancelable: false, detail: undefined }\r\n    var evt = document.createEvent( 'CustomEvent' )\r\n    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail )\r\n    return evt\r\n  }\r\n\r\n  CustomEvent.prototype = window.Event.prototype\r\n\r\n  window.CustomEvent = CustomEvent\r\n})()\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n// import { renderRoutes } from 'react-router-config';\nimport Loadable from 'react-loadable';\nimport './App.scss';\n\nconst loading = () => <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>;\n\n// Containers\nconst DefaultLayout = Loadable({\n  loader: () => import('./views/DefaultLayout'),\n  loading\n});\n\n// Pages\nconst Login = Loadable({\n  loader: () => import('./views/Pages/Login'),\n  loading\n});\n\nconst Register = Loadable({\n  loader: () => import('./views/Pages/Register'),\n  loading\n});\n\nconst Page404 = Loadable({\n  loader: () => import('./views/Pages/Page404'),\n  loading\n});\n\nconst Page500 = Loadable({\n  loader: () => import('./views/Pages/Page500'),\n  loading\n});\n\nconst AjaxLoader = () => {\n  return (\n    <div id='ajax-loader-container' className='disp-none'>\n      <div className='ajax-overlay'></div>\n      <div className='ajax-loader'></div>\n    </div>\n  )\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <AjaxLoader />\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/login\" name=\"Login Page\" component={Login} />\n            <Route exact path=\"/register\" name=\"Register Page\" component={Register} />\n            <Route exact path=\"/404\" name=\"Page 404\" component={Page404} />\n            <Route exact path=\"/500\" name=\"Page 500\" component={Page500} />\n            <Route path=\"/\" name=\"Home\" component={DefaultLayout} />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default function UserReducer(state = {}, action) {\r\n    // const _s = Object.assign(state);\r\n    switch(action.type) {\r\n        case 'LOGIN': return action.payload;\r\n        case 'LOGOUT': return {}\r\n        default : return state;\r\n    }\r\n}","import 'react-app-polyfill/ie9'; // For IE 9-11 support\nimport 'react-app-polyfill/ie11'; // For IE 11 support\nimport './polyfill';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './store/';\n\nasync function init() {\n    const { store, persistor } = await configureStore();\n    ReactDOM.render(\n        <Provider store={store}>\n            <PersistGate loading={null} persistor={persistor}>\n                <App />\n            </PersistGate>\n        </Provider>,\n        document.getElementById('root')\n    );\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: http://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n}\ninit();\n","import { applyMiddleware, createStore, combineReducers, compose } from 'redux';\r\nimport UserReducer from '../reducers/UserReducer';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport thunk from 'redux-thunk';\r\nexport default function configureStore() {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            const rootReducer = combineReducers(\r\n                { user: UserReducer },\r\n                {},\r\n                compose(applyMiddleware(thunk))\r\n            );\r\n            const persistConfig = {\r\n                key: 'root',\r\n                storage,\r\n            }\r\n            const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n            const store = createStore(persistedReducer);\r\n            const persistor = persistStore(store)\r\n            resolve({ store, persistor });\r\n        } catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n}\r\n"],"sourceRoot":""}